Bulb.data.scripts = [{"label":"","extension":"","code":"","type":"export"},{"label":"Text scene settings","extension":"settings","code":"function (scene) {\n var modelsOut = \"# models (filename reverseWinding scaleFactor translation)\\n\";\n var fluidSourceOut = \"# fluid and wind source (rate position size)\\n\";\n var sceneOut = '';\n for(var i = 0; i < scene.children.length; i++) {\n var object = scene.children[i];\n if(object.userData.type == 'model') {\n modelsOut += 'm ' + object.name + '.obj ' + (object.userData.reverseWinding ? 0 : 1) + ' ';\n modelsOut += object.scale.x + '/' + object.scale.y + '/' + object.scale.z + ' ';\n modelsOut += object.position.x + '/' + object.position.y + '/' + object.position.z + \"\\n\";\n }\n if(object.userData.type == 'fluid_source' || object.userData.type == 'wind_source') {\n fluidSourceOut += {fluid_source: 'f', wind_source: 'w'}[object.userData.type];\n fluidSourceOut += ' ' + object.userData.rate + ' ';\n fluidSourceOut += object.position.x + '/' + object.position.y + '/' + object.position.z + ' ';\n fluidSourceOut += object.scale.x + '/' + object.scale.y + '/' + object.scale.z + \"\\n\";\n }\n }\n var object = scene; \n console.log(object); \n if(object.userData.type == 'scene') {\n sceneOut += \"# maximum number of particles\\np \" + object.userData.maximum_number_of_particles + \"\\n\\n\";\n sceneOut += \"# distance limit for tesselation\\nd \" + object.userData.distance_limit_for_tesselation + \"\\n\\n\";\n sceneOut += \"# material (sediment_change max_sediment_in_particle critical_shear)\\n\";\n sceneOut += 's ' + object.userData.sediment_change + ' ' ;\n sceneOut += object.userData.max_sediment_in_particle + ' ';\n sceneOut += object.userData.critical_shear + \"\\n\";\n }\n return modelsOut + \"\\n\" + fluidSourceOut + \"\\n\" + sceneOut;\n}","type":"export"},{"label":"XML scene settings","extension":"xml","code":"function (scene) {\n var xml = '<scene maxNumberOfParticles=\"' + scene.userData.maximum_number_of_particles + '\" distanceLimitForTesselation=\"' + scene.userData.distance_limit_for_tesselation+ '\">';\n for(var i = 0; i < scene.children.length; i++) {\n var model = scene.children[i];\n if(model.userData.type == 'model') {\n xml += '<model file=\"' + model.name + '.obj\" reverseWinding=\"' + model.userData.reverseWinding + '\">';\n xml += '<position x=\"' + model.position.x + '\" y=\"' + model.position.y + '\" z=\"' + model.position.z + '\" />';\n xml += '<scale x=\"' + model.scale.x + '\" y=\"' + model.scale.y + '\" z=\"' + model.scale.z + '\" />';\n xml += '<material sedimentChange=\"' + scene.userData.sediment_change + '\"'; \n xml += ' maxSedimentInParticle=\"' + scene.userData.max_sediment_in_particle + '\"';\n xml += ' criticalShear=\"' + scene.userData.critical_shear + '\" />';\n xml += '</model>';\n }\n if(model.userData.type == 'fluid_source') {\n xml += '<fluidSource rate=\"' + model.userData.rate + '\">';\n xml += '<position x=\"' + model.position.x + '\" y=\"' + model.position.y + '\" z=\"' + model.position.z + '\" />';\n xml += '<scale x=\"' + model.scale.x + '\" y=\"' + model.scale.y + '\" z=\"' + model.scale.z + '\" />';\n xml += '</fluidSource>';\n }\n if(model.userData.type == 'wind_source') {\n xml += '<windSource rate=\"' + model.userData.rate + '\">';\n xml += '<position x=\"' + model.position.x + '\" y=\"' + model.position.y + '\" z=\"' + model.position.z + '\" />';\n xml += '<scale x=\"' + model.scale.x + '\" y=\"' + model.scale.y + '\" z=\"' + model.scale.z + '\" />';\n xml += '</windSource>';\n }\n }\n xml += '</scene>';\n return xml;\n}","type":"export"},{"type":"import","label":"Text Settings","extension":"settings","code":"function(data, canvas) {\n \tvar scene = canvas.getScene();\n\tvar lines = data.split(\"\\n\");\n \tfor(var i = 0; i < lines.length; i++) {\n var line = lines[i];\n var words = line.split(' ');\n if(words[0] == 'm') {\n \tvar name = words[1].slice(0, words[1].indexOf('.obj'));\n var object = scene.getObjectByName(name);\n \tobject.userData.reverseWinding = words[2];\n \tobject.userData.type = 'model';\n \tvar scale = words[3].split('/');\n \tobject.scale.set(scale[0]*1, scale[1]*1, scale[2]*1);\n \tvar position = words[4].split('/');\n \tobject.position.set(position[0]*1, position[1]*1, position[2]*1);\n\t\t}\n if(words[0] == 'f' || words[0] == 'w') {\n var names = {f: 'FluidSource', w: 'WindSource'};\n canvas.addCube(names[words[0]]);\n var object = scene.getObjectByName(names[words[0]]);\n object.userData.rate = words[1];\n var position = words[2].split('/');\n object.position.set(position[0]*1,position[1]*1,position[2]*1);\n var scale = words[3].split('/');\n object.scale.set(scale[0]*1,scale[1]*1,scale[2]*1);\n var types = {f: 'fluid_source', w: 'wind_source'};\n object.userData.type = types[words[0]];\n }\n if(words[0] == 'p') scene.userData.maximum_number_of_particles = words[1];\n if(words[0] == 'd') scene.userData.distance_limit_for_tesselation = words[1];\n if(words[0] == 's') {\n \tscene.userData.sediment_change = words[1];\n \tscene.userData.max_sediment_in_particle = words[2];\n \tscene.userData.critical_shear = words[3];\n }\n\t}\n scene.userData.type = 'scene';\n}"}];