Bulb.data.scripts = [{"label":"","extension":"","code":"","type":"export"},{"label":"Text scene settings","extension":"settings","code":"function (scene) {\n var modelsOut = \"# models (filename reverseWinding scaleFactor translation)\\n\";\n var fluidSourceOut = \"# fluid and wind source (rate position size)\\n\";\n var sceneOut = '';\n for(var i = 0; i < scene.children.length; i++) {\n var object = scene.children[i];\n if(object.userData.type == 'model') {\n \tmodelsOut += 'm ' + object.name + '.obj ' + (object.userData.reverseWinding ? 0 : 1) + ' ';\n \tmodelsOut += object.scale.x + '/' + object.scale.y + '/' + object.scale.z + ' ';\n \tmodelsOut += object.position.x + '/' + object.position.y + '/' + object.position.z + \"\\n\";\n }\n \tif(object.userData.type == 'fluid_source' || object.userData.type == 'wind_source') {\n \tfluidSourceOut += {fluid_source: 'f', wind_source: 'w'}[object.userData.type];\n \tfluidSourceOut += ' ' + object.userData.rate;\n \tfluidSourceOut += object.position.x + '/' + object.position.y + '/' + object.position.z + ' ';\n \tfluidSourceOut += object.scale.x + '/' + object.scale.y + '/' + object.scale.z + \"\\n\";\n }\n if(object.userData.type == 'scene') {\n \tsceneOut += \"# maximum number of particles\\np \" + object.userData.maximum_number_of_particles + \"\\n\\n\";\n \tsceneOut += \"# distance limit for tesselation\\nd \" + object.userData.distance limit_for_tesselation + \"\\n\\n\";\n \tsceneOut += \"# material (sediment_change max_sediment_in_particle critical_shear)\\n\";\n \tsceneOut += 's ' + object.userData.sediment_change + ' ' ;\n sceneOut += object.userData.max_sediment_in_particle + ' ';\n \tsceneOut += object.userData.critical_shear + \"\\n\";\n }\n }\n return modelsOut + \"\\n\" + fluidSourceOut + \"\\n\" + sceneOut;\n}","type":"export"},{"label":"XML scene settings","extension":"xml","code":"","type":"export"},{"type":"import","label":"Text Settings","extension":"settings","code":"function(data, scene) {\n\tvar lines = data.split(\"\\n\");\n \tfor(var i = 0; i < lines.length; i++) {\n \tvar line = lines[i];\n var words = line.split(' ');\n \tif(words[0] == 'm') {\n \tvar name = words[1].slice(0, words[1].indexOf('.obj'));\n \t\tvar object = scene.getObjectByName(name);\n \tobject.userData.reverseWinding = words[2];\n \tobject.userData.type = 'model';\n \tvar scale = words[3].split('/');\n \tobject.scale.set(scale[0]*1, scale[1]*1, scale[2]*1);\n \tvar position = words[4].split('/');\n \tobject.position.set(position[0]*1, position[1]*1, position[2]*1);\n }\n }\n}"}];